package com.ict12.after;

public class Ex03 {
	public static void main(String[] args) {
		// 증감 연산자 : 1만큼 증가 하거나 1만큼 감소시키는 연산자 이다
		//					char, 정수 (byte, short , int , long) , 실수 (float, double)
		
		
		// ++ 변수 : 먼저 현재 변수 값을 1증가 시키고 나머지 연산을 한다
		// 변수++ : 현재 변수 값으로 연산을 하고 나중에 변수값을 1증가 시킨다 
		
		// 비교 연산자 : 변수나 상수의 값을 비교할떄 사용
		//				결과는 항상 boolean형이다 
		//				자료형이 클래스 또는 String 이면 사용하지 말자 
		// a > b => a가 b보다 크다 (왼쪽이 기준이다)
		//   > ( 크다), >= (크거나 같다) == (같다), <=(작거나 같다), < (작다) !=(같지 않다, 다르다)
		
		// char 와 char 비교가능, char 와 int 비교가능, int 와 double 비교가능
		char c1 ='a'; // 97
		char c2 ='c'; // 99
		System.out.println(c1 > c2);  // false
		
		// 논리 연산자 : &&(AND, 논리곱) , || (OR, 논리합) !(NOT, 논리부정)
		// 				논리연산자의 결과는 boolean형이다 
		// && (AND, 논리곱, 교집합) 
		// 주어진 조건이 모두 true(참) 일떄만 결과 true (참)
		// 주어진 조건들중에 false를 만나는 순간 결과는 false
		// false를 만나면 이후에 있는 연산을 하지 않는다
		
		// &&에서 숫자와 숫자 사이에 &&가 있을 경우 범위를 지정할수 있다 
		// a >= 10 &&  a <=20
		// a는 10보다 크거나 같으면서 20보다는 작거나 같아야 한다
		// 즉, a는 10~20 사이를 말함
		
		//  char c1 의 소문자 범위 지정
		char c3 = 'k';
		// (c3 >= 'a') && (c3 <='z'); 의미는 소문자 'a' ~ 소문자 'z' 사이에 존재하냐?
		boolean c4 = (c3 >= 'a') && (c3 <='z');
			
		
		// || (OR, 논리합, 합집합)
		// 주어진 조건이 하나라도 true(참)이면 결과는 true(참)
		// 주어진 조건들중에 true를 만나는 순가 true
		// true를 만나면 이후에 있는 연산을 하지 않는다 
		
		// !(NOT, 논리부정)
		// 주어진 boolean형의 값을 반대로 변경하는 연산
		// true => false, false => true
		// !이 두개이면 삭제된다
		
		// 대입 연산 : 특정값이나 객체의 주소를 변수에 기억시킬때 (저장시킬때)
		// 				= (저장),  += (덧셈후 저장) , -=(뺄셈후 저장), 
		//				*=(곱셈 후 저장), /=(나눗셈 후 저장), %=(나머지 구하구 저장)
		
		int k1 =7 ; // 데이터 7를 k1에 저장
		
		k1 += 7 ; // k1 +7 한 후에 k1에 저장한다
		k1 -= 7 ; // k1 -7 한 후에 k1에 저장한다
		
		// int k2 = 8이다 k2 데이터를 1씩 증가시키는 법
		int k2 = 8; // 9
		k2 += 1; // 10
		++ k2 ;  // 11
		
		
		
		
		
		
		
		
		
		
		
		
	}
}
